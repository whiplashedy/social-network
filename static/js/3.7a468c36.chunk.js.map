{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/ProfileDialog/ProfileDialogs.module.css","components/Dialogs/ProfileDialog/ProfileMessage/ProfileMessage.module.css","components/Dialogs/ProfileDialog/ProfileMessage/ProfileMessage.js","components/Dialogs/ProfileDialog/ProfileDialogs.js","components/Dialogs/ProfileDialog/ProfileDialogsContainer.js"],"names":["mapStateToProps","state","isAuth","authPage","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileMessage","newMessage","createRef","archive","className","id","ref","onChange","text","current","value","updateMessageText","placeholder","newDialogText","length","s","input","type","onClick","sendMessage","button","ProfileDialog","name","message","ProfileDialogs","newDialogData","dialogsData","map","el","messages","eachMessageArchive","path","render","classes","dialogs","dialog","compose","dialogPage","dispatch","actionCreatorSendMessage","actionCreatorUpdateMessageText"],"mappings":"8NAIIA,EAAkB,SAACC,GAAD,MAAW,CAC7BC,OAAQD,EAAME,SAASD,SAGdE,EAAmB,SAACC,GAAc,IACrCC,EADoC,uKAGlC,OAAQC,KAAKC,MAAMN,OAAoC,cAACG,EAAD,eAAeE,KAAKC,QAA/C,cAAC,IAAD,CAAUC,GAAI,eAHR,GACVC,IAAML,WAQtC,OAFgCM,YAAQX,EAARW,CAAyBL,K,oBCd7DM,EAAOC,QAAU,CAAC,QAAU,gCAAgC,OAAS,+BAA+B,QAAU,kC,oBCA9GD,EAAOC,QAAU,CAAC,MAAQ,gC,uHC+BXC,EA7BQ,SAACN,GAEpB,IAAIO,EAAaL,IAAMM,YAUvB,OACI,gCACI,8BAAMR,EAAMS,UACZ,sBAAKC,UAAU,UAAf,UACI,uBAAOC,GAAG,qBAAqBC,IAAKL,EAAYM,SATxC,WAChB,IAAIC,EAAOP,EAAWQ,QAAQC,MAC9BhB,EAAMiB,kBAAkBH,IAQTI,YAAY,kBACZF,MAAOhB,EAAMmB,cACbC,OAAO,KACPV,UAAS,UAAKW,IAAEC,MAAP,mBAChB,wBAAQC,KAAK,SAASC,QAjBhB,WACdxB,EAAMyB,eAiBUf,UAAS,UAAKW,IAAEK,OAAP,uCADjB,0BCnBVC,EAAgB,SAAC3B,GAAD,OAClB,gCACI,cAAC,IAAD,CAASC,GAAI,aAAeD,EAAMW,GAAlC,SAAuCX,EAAM4B,OAC7C,8BACK5B,EAAM6B,cAsBJC,EAhBQ,SAAC9B,GACpB,IAAI+B,EAAgB/B,EAAMgC,YAAYC,KAAK,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAeN,KAAOM,EAAGN,KAAmBjB,GAAMuB,EAAGvB,GAAIkB,QAAQ,aAA5BK,EAAGvB,OAEvFF,EAAUT,EAAMmC,SAASF,KAAI,SAAAC,GAAE,OAAI,8BAAMA,EAAGL,aAC5CO,EACApC,EAAMmC,SAASF,KAAK,SAACC,GAAD,OAAQ,cAAC,IAAD,CAAoBG,KAAQ,aAAeH,EAAGvB,GAAI2B,OAAS,kBAAM,cAAC,EAAD,CAAgB7B,QAAWA,EAASU,cAAiBnB,EAAMmB,cAAeF,kBAAqBjB,EAAMiB,kBAAmBQ,YAAezB,EAAMyB,gBAAjMS,EAAGvB,OAIhD,OACI,sBAAKD,UAAW6B,IAAQC,QAAxB,UACI,qBAAK9B,UAAW6B,IAAQE,OAAxB,SAAiCV,IACjC,qBAAKrB,UAAW6B,IAAQV,QAAxB,SAAkCO,Q,iCCF/BM,sBAAQvC,aAlBD,SAACV,GACnB,MAAM,CACF0C,SAAU1C,EAAMkD,WAAWR,SAC3BH,YAAavC,EAAMkD,WAAWX,YAC9Bb,cAAe1B,EAAMkD,WAAWxB,kBAGf,SAACyB,GACtB,MAAO,CACHnB,YAAa,WACTmB,EAASC,gBAEb5B,kBAAmB,SAACH,GAChB8B,EAASE,YAA+BhC,SAKgBlB,IAArD8C,CAAuEZ","file":"static/js/3.7a468c36.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>({\r\n    isAuth: state.authPage.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            return !this.props.isAuth ? <Redirect to ='/login'/> : <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n    let connectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connectedWithAuthRedirect;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"ProfileDialogs_dialogs__3oonZ\",\"dialog\":\"ProfileDialogs_dialog__1leZ_\",\"message\":\"ProfileDialogs_message__836la\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ProfileMessage_input__2hhAF\"};","import React from \"react\"\r\nimport s from \"./ProfileMessage.module.css\";\r\n\r\nconst ProfileMessage = (props) => {\r\n\r\n    let newMessage = React.createRef();\r\n\r\n    let sendMessage = () =>{\r\n        props.sendMessage();\r\n    }\r\n    let onMessageText = () =>{\r\n        let text = newMessage.current.value;\r\n        props.updateMessageText(text);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>{props.archive}</div>\r\n            <div className=\"md-form\">\r\n                <input id=\"input-char-counter\" ref={newMessage} onChange={onMessageText}\r\n                       placeholder=\"Write a message\"\r\n                       value={props.newDialogText}\r\n                       length=\"80\"\r\n                       className={`${s.input} form-control`}/>\r\n                <button type=\"button\" onClick={sendMessage}\r\n                        className={`${s.button} + btn btn-outline-primary border-0`}>Enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileMessage;\r\n","import React from 'react'\r\nimport classes from './ProfileDialogs.module.css'\r\nimport  {Redirect, NavLink, Route} from \"react-router-dom\";\r\nimport ProfileMessage from \"./ProfileMessage/ProfileMessage\";\r\n\r\nconst ProfileDialog = (props) => (\r\n    <div>\r\n        <NavLink to={\"/messages/\" + props.id}>{props.name}</NavLink>\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nconst ProfileDialogs = (props) => {\r\n    let newDialogData = props.dialogsData.map( (el) => <ProfileDialog name ={el.name} key ={el.id} id = {el.id} message=\"Hi, Nysrs\"/>\r\n    )\r\n    let archive = props.messages.map(el => <div>{el.message}</div>);\r\n    let eachMessageArchive =\r\n        props.messages.map( (el) => <Route key ={el.id} path = {\"/messages/\" + el.id} render ={() => <ProfileMessage archive = {archive} newDialogText = {props.newDialogText} updateMessageText = {props.updateMessageText} sendMessage = {props.sendMessage} />\r\n            }/>\r\n        )\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialog}>{newDialogData}</div>\r\n            <div className={classes.message}>{eachMessageArchive}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileDialogs;\r\n","import React from 'react'\r\nimport ProfileDialogs from \"./ProfileDialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreatorSendMessage, actionCreatorUpdateMessageText} from \"../../../redux/dialog-reducer\";\r\nimport {WithAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        messages: state.dialogPage.messages,\r\n        dialogsData: state.dialogPage.dialogsData,\r\n        newDialogText: state.dialogPage.newDialogText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(actionCreatorSendMessage());\r\n        },\r\n        updateMessageText: (text) => {\r\n            dispatch(actionCreatorUpdateMessageText(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),WithAuthRedirect)(ProfileDialogs)\r\n\r\n\r\n"],"sourceRoot":""}