{"version":3,"sources":["hoc/withAuthRedirect.js","components/Feed/FeedContent/FeedContent.module.css","components/Feed/MyPosts/Post/Post.module.css","components/Feed/MyPosts/Post/Post.js","components/Feed/MyPosts/MyPosts.js","components/Feed/FeedContent/FeedContent.js","components/Feed/FeedContent/FeedContentContainer.js"],"names":["mapStateToProps","state","isAuth","authPage","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","styles","post","content","MyPosts","new_posts","posts","map","el","FeedContent","newPost","createRef","classes","feed","feedMessage","icon","id","ref","placeholder","onChange","postChange","current","value","updatePostText","newPostText","length","input","type","onClick","addPost","button","compose","feedPage","dispatch","actionCreatorAddPost","text","actionCreatorUpdatePostText"],"mappings":"8NAIIA,EAAkB,SAACC,GAAD,MAAW,CAC7BC,OAAQD,EAAME,SAASD,SAGdE,EAAmB,SAACC,GAAc,IACrCC,EADoC,uKAGlC,OAAQC,KAAKC,MAAMN,OAAoC,cAACG,EAAD,eAAeE,KAAKC,QAA/C,cAAC,IAAD,CAAUC,GAAI,eAHR,GACVC,IAAML,WAQtC,OAFgCM,YAAQX,EAARW,CAAyBL,K,oBCd7DM,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,oBCA/KD,EAAOC,QAAU,CAAC,KAAO,qB,+GCSVC,EARF,SAACN,GACV,OACI,qBAAKO,UAAWC,IAAOC,KAAvB,SACKT,EAAMU,WCOJC,EATC,SAACX,GACb,IAAIY,EAAYZ,EAAMa,MAAMC,KAAI,SAAAC,GAAE,OAAK,cAAC,EAAD,CAAML,QAAWK,OACxD,OACI,8BACKH,K,QCgCEI,EAlCK,SAAChB,GAEjB,IAAIA,EAAMN,OAAQ,OAAO,cAAC,IAAD,CAAUO,GAAM,WAEzC,IAAIgB,EAAUf,IAAMgB,YAYpB,OACI,sBAAKX,UAAWY,IAAQC,KAAxB,UACI,qBAAKb,UAAWY,IAAQE,YAAxB,SACA,sBAAKd,UAAU,UAAf,UACI,mBAAGA,UAAS,UAAKY,IAAQG,KAAb,4BACZ,uBAAOC,GAAG,qBAAqBC,IAAOP,EAASQ,YAAY,oBAAoBC,SAXxE,WACf,IAAIC,EAAaV,EAAQW,QAAQC,MACjC7B,EAAM8B,eAAeH,IAUoCE,MAAS7B,EAAM+B,YACfC,OAAO,KACPzB,UAAS,UAAKY,IAAQc,MAAb,6BAC1D,wBAAQC,KAAK,SAASC,QAnBpB,WACVnC,EAAMoC,WAkB4C7B,UAAS,UAAKY,IAAQkB,OAAb,uCAAnD,wBAIJ,cAAC,EAAD,CAASxB,MAASb,EAAMa,Y,yBCTrByB,sBAAQnC,aAlBD,SAACV,GACnB,MAAM,CACFoB,MAAOpB,EAAM8C,SAAS1B,MACtBkB,YAAatC,EAAM8C,SAASR,gBAIX,SAACS,GACtB,MAAM,CACFJ,QAAS,WACLI,EAASC,gBAEbX,eAAgB,SAACY,GACbF,EAASG,YAA4BD,SAKoB9C,IAAtD0C,CAAwEtB","file":"static/js/4.2523e99c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>({\r\n    isAuth: state.authPage.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            return !this.props.isAuth ? <Redirect to ='/login'/> : <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n    let connectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connectedWithAuthRedirect;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"FeedContent_feed__2BQ40\",\"feedMessage\":\"FeedContent_feedMessage__1xxDn\",\"icon\":\"FeedContent_icon__1Q-MU\",\"input\":\"FeedContent_input__3PYxd\",\"button\":\"FeedContent_button__2sUOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2cyrF\"};","import React from \"react\";\r\nimport styles from \"./Post.module.css\"\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={styles.post}>\r\n            {props.content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    let new_posts = props.posts.map(el => (<Post content = {el}/>));\r\n    return (\r\n        <div>\r\n            {new_posts}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport classes from './FeedContent.module.css'\r\nimport MyPosts from \"../MyPosts/MyPosts\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst FeedContent = (props) => {\r\n\r\n    if(!props.isAuth) return <Redirect to = {\"/login\"} />\r\n\r\n    let newPost = React.createRef();\r\n\r\n    let addPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () =>{\r\n        let postChange = newPost.current.value;\r\n        props.updatePostText(postChange);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.feed}>\r\n            <div className={classes.feedMessage}>\r\n            <div className=\"md-form\">\r\n                <i className={`${classes.icon} fas fa-user-astronaut`}></i>\r\n                <input id=\"input-char-counter\" ref = {newPost} placeholder=\"What's happening?\" onChange ={onPostChange}\r\n                                                                 value = {props.newPostText}\r\n                                                                 length=\"80\"\r\n                                                                 className={`${classes.input} form-control  border-0`}/>\r\n                <button type=\"button\" onClick = {addPost} className={`${classes.button} + btn btn-outline-primary border-0`}>Tweet\r\n                </button>\r\n            </div>\r\n            </div>\r\n            <MyPosts posts = {props.posts}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FeedContent;\r\n","import {actionCreatorAddPost, actionCreatorUpdatePostText} from \"../../../redux/feed-reducer\";\r\nimport FeedContent from \"./FeedContent\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.feedPage.posts,\r\n        newPostText: state.feedPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: () => {\r\n            dispatch(actionCreatorAddPost());\r\n        },\r\n        updatePostText: (text) => {\r\n            dispatch(actionCreatorUpdatePostText(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(FeedContent);\r\n"],"sourceRoot":""}