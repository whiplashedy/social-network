{"version":3,"sources":["hoc/withAuthRedirect.js","components/Users/UserProfile/UserProfile.module.css","components/Users/UserProfile/UserProfileStatus.module.css","components/Users/UserProfile/UserProfileStatusHooks.js","components/Users/UserProfile/UserProfile.js","components/Users/UserProfile/UserProfileContainer.js"],"names":["mapStateToProps","state","isAuth","authPage","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","UserProfileStatusHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","className","styles","input","type","onDoubleClick","UserProfile","profile","isFetching","userProfile","Preloader","src","photos","small","width","height","fullName","UserProfileContainer","uid","match","params","setUsersProfileThunk","setUserStatusThunk","updateUserStatusThunk","compose","withRouter","usersPage"],"mappings":"8NAIIA,EAAkB,SAACC,GAAD,MAAW,CAC7BC,OAAQD,EAAME,SAASD,SAGdE,EAAmB,SAACC,GAAc,IACrCC,EADoC,uKAGlC,OAAQC,KAAKC,MAAMN,OAAoC,cAACG,EAAD,eAAeE,KAAKC,QAA/C,cAAC,IAAD,CAAUC,GAAI,eAHR,GACVC,IAAML,WAQtC,OAFgCM,YAAQX,EAARW,CAAyBL,K,oBCd7DM,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,MAAQ,mC,4JCkCXC,EAhCgB,SAACN,GAAW,IAAD,EACRO,oBAAS,GADD,mBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASP,EAAMU,QAFH,mBAEjCA,EAFiC,KAEzBC,EAFyB,KAItCC,qBAAU,WACND,EAAUX,EAAMU,UACjB,CAACV,EAAMU,SAaV,OAAO,mCAECF,EACI,8BAAK,uBAAOK,SANH,SAACC,GAClBH,EAAUG,EAAEC,cAAcC,QAKoBC,WAAW,EAAMC,OAX1C,WACrBT,GAAY,GACZT,EAAMmB,aAAaT,IAUCU,UAAWC,IAAOC,MAClBC,KAAK,OAAOP,MAAON,MAC/B,8BAAK,sBACDc,cAlBO,WACpBf,GAAY,IAgBE,SACiCC,GAAU,4BCRjDe,EAhBG,SAACzB,GACf,OAAIA,EAAM0B,QAIN1B,EAAM2B,WACC,qBAAKP,UAAWC,IAAOO,YAAvB,SAAoC,cAACC,EAAA,EAAD,MAGpC,sBAAKT,UAAWC,IAAOO,YAAvB,UAAoC,qBAAKE,IAAK9B,EAAM0B,QAAQK,OAAOC,OAAS,+EAAgFC,MAAM,QAAQC,OAAO,UACpL,cAAC,EAAD,CAAwBxB,OAAUV,EAAMU,OAAQS,aAAgBnB,EAAMmB,eACtE,8BAAMnB,EAAM0B,QAAQS,cARjBN,K,yCCCTO,E,kLAEE,IAAIC,EAAMtC,KAAKC,MAAMsC,MAAMC,OAAOF,IAC9BA,IACAA,EAAM,OAEVtC,KAAKC,MAAMwC,qBAAqBH,GAChCtC,KAAKC,MAAMyC,mBAAmBJ,K,+BAI9B,OAAO,cAAC,EAAD,2BAAiBtC,KAAKC,OAAtB,IAA6B0B,QAAW3B,KAAKC,MAAM0B,QAASC,WAAc5B,KAAKC,MAAM2B,WAAYjB,OAAUX,KAAKC,MAAMU,OAAQS,aAAgBpB,KAAKC,MAAM0C,6B,GAXrIxC,IAAML,WAoB1B8C,sBAAQ/C,IAAkBgD,IAAYzC,aAL/B,SAACV,GAAD,MAAW,CAC7BiC,QAASjC,EAAMoD,UAAUnB,QACzBC,WAAYlC,EAAMoD,UAAUlB,WAC5BjB,OAAQjB,EAAMoD,UAAUnC,UAEiD,CAAC8B,yBAAsBC,uBAAoBC,4BAAzGC,CAAkIP","file":"static/js/5.e20ead6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) =>({\r\n    isAuth: state.authPage.isAuth\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            return !this.props.isAuth ? <Redirect to ='/login'/> : <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n    let connectedWithAuthRedirect = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return connectedWithAuthRedirect;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfile\":\"UserProfile_userProfile__Ot994\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"UserProfileStatus_input__3-D3G\"};","import React, {useEffect, useState} from 'react'\r\nimport styles from './UserProfileStatus.module.css'\r\n\r\nconst UserProfileStatusHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() =>{\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n       setEditMode(true);\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) =>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return <>\r\n        {\r\n            editMode ?\r\n                <div><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                            className={styles.input}\r\n                            type=\"text\" value={status}/></div> :\r\n                <div><span\r\n                    onDoubleClick={activateEditMode}>{status || \"I dont have status\"}</span>\r\n                </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default UserProfileStatusHooks;\r\n","import React from 'react'\r\nimport styles from './UserProfile.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport UserProfileStatusHooks from \"./UserProfileStatusHooks\";\r\n\r\nlet UserProfile = (props) => {\r\n    if(!props.profile)\r\n    {\r\n        return Preloader;\r\n    }\r\n    if (props.isFetching) {\r\n        return <div className={styles.userProfile}><Preloader/></div>\r\n    }\r\n    else {\r\n        return <div className={styles.userProfile}><img src={props.profile.photos.small || \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\"} width=\"100px\" height=\"100px\"/>\r\n            <UserProfileStatusHooks status = {props.status} updateStatus = {props.updateStatus}/>\r\n            <div>{props.profile.fullName}</div></div>\r\n    }\r\n\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react'\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nimport {setUserStatusThunk, setUsersProfileThunk, updateUserStatusThunk} from \"../../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UserProfileContainer extends React.Component{\r\n    componentDidMount() {\r\n        let uid = this.props.match.params.uid;\r\n        if(!uid){\r\n            uid = 13819;\r\n        }\r\n        this.props.setUsersProfileThunk(uid);\r\n        this.props.setUserStatusThunk(uid);\r\n    }\r\n\r\n    render() {\r\n        return <UserProfile {...this.props} profile = {this.props.profile} isFetching = {this.props.isFetching} status = {this.props.status} updateStatus = {this.props.updateUserStatusThunk}/>;\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>({\r\n    profile: state.usersPage.profile,\r\n    isFetching: state.usersPage.isFetching,\r\n    status: state.usersPage.status\r\n})\r\nexport default compose(WithAuthRedirect, withRouter, connect(mapStateToProps,{setUsersProfileThunk, setUserStatusThunk, updateUserStatusThunk}))(UserProfileContainer)\r\n"],"sourceRoot":""}